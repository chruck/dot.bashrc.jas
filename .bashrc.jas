#!/bin/bash
# Jas' .bashrc file for all OSes

# The name of this file
THISFILE=$_
THISFILENAME=.bashrc.jas
#case $0 in
    #-*|/bin/bash)
        ## sourced
        #THISFILE=~jas/${THISFILENAME}
        #;;
    #*)
        ## executed
        #THISFILE=$0
        #;;
#esac

# version
JAS_ROX=2009.10.22

# Section to increment the above automatically, when this file is
# updated, then automatically publish to appropriate machines.
# Usage:  . ~/.bashrc.jas incr
#    or:  sh ~/.bashrc.jas incr
#    or:  ~/.bashrc.jas incr
if [[ "incr" == $1 ]] ; then
    DATE=$(date +%Y.%m.%d)
    sed -i "/^JAS[_]ROX/s/[0-9.]\+/${DATE}/" ${THISFILE}
    JAS_ROX=${DATE}
    MACHINES="jas.is-a-geek.com jeckard@68.143.17.240
              builder jas-dev.jas-dev jas5.jas-dev
              jas8.jas-dev"
    for i in ${MACHINES} ; do
        echo --- ${i} ---
        scp ${THISFILE} ${i}:
    done
fi

mkprofile() {
    cat <<EOFPROFILE > ~/.bash_profile
# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

source .bashrc
EOFPROFILE
}

## if this file is not already symlinked, do so now, unless user root
## skip this section on NetWare
#if [[ netware != ${DISTRO} ]] ; then
#    if [[ 0 != ${UID} ]] ; then
#        cd
#        if [[ -f .bashrc && ! -L .bashrc ]] ; then
#            # exists, and is a regular file, and not a symlink
#            mv .bashrc .bashrc.orig
#            ln -s ${THISFILE} .bashrc
#        fi
#        if [[ ! -e .bashrc ]] ; then
#            # doesn't exist
#            ln -s ${THISFILE} .bashrc
#        fi
#        if [[ ( -f .bash_profile && ! -L .bash_profile )
#              # exists, and is a regular file, and not a symlink
#              || ( ! -e .bash_profile ) || ( -L .bash_profile ) ]] ; then
#              # or doesn't exist or is a symlink
#            mv .bash_profile .bash_profile.orig 2> /dev/null
#            #ln -s .bashrc .bash_profile
#            mkprofile
#        fi
#        #if [[ ! -e .bash_profile ]] ; then
#            ## doesn't exist
#            ##ln -s .bashrc .bash_profile
#            #mkprofile
#        #fi
#    else 
#        # root needs a symlink to this file, even if the .bash_profile and
#        # .bashrc are unchanged
#        ln -s $(dirname ${THISFILE})/${THISFILENAME} ${HOME}
#    fi
#fi

# use `vi' editing at the bash commandline
set -o vi
# Update COLUMNS and ROWS
shopt -s checkwinsize
# use directory spell checking for `cd'
shopt -s cdspell
# append to the history file
shopt -s histappend
# failed history substitions get another try
shopt -s histreedit

if [[ -e /etc/redhat-release ]] ; then
    DISTRO="redhat"
    RELEASE="$(cat /etc/redhat-release)"
elif [[ -e /etc/SuSE-release ]] ; then
    DISTRO="suse"
    RELEASE="$(cat /etc/SuSE-release)"
elif [[ "$(uname)x" == "Darwinx" ]] ; then
    DISTRO="macosx"
else case ${OSTYPE} in
      cygwin)
        DISTRO="cygwin"
        ;;
      NetWare)
        DISTRO="netware"
        ;;
      linux)
        DISTRO="undetermined"
        ;;
    esac
fi

ISMEDSRV=no

if [[ netware != ${DISTRO} ]] && grep medsrv /etc/passwd > /dev/null
then
    ISMEDSRV=yes
fi

if [[ -f /etc/profile.d/bash-completion ]] ; then
    source /etc/profile.d/bash-completion
fi

# For GoboLinux:
#. ~/Programs/Rootless/Settings/StartGobo

# At home:
#export NNTPSERVER=newsgroups.bellsouth.net

# Jas' favs

# Necessary?
#umask 022

if [[ "${DISTRO}" == "macosx" ]] ; then
    export LS_OPTIONS='-G'
else
    export LS_OPTIONS='--color=auto'
fi

#export LS_COLORS='no=00:fi=00:di=01;34:ln=01;36:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arj=01;31:*.taz=01;31:*.lzh=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.gz=01;31:*.bz2=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.avi=01;35:*.fli=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.ogg=01;35:*.mp3=01;35:*.wav=01;35:'
export LS_COLORS='*.Z=01;31:*.arj=01;31:*.bat=01;32:*.avi=01;35:*.bmp=01;35:*.btm=01;32:*.bz2=01;31:*.bz=01;31:*.cmd=01;32:*.com=01;32:*.cpio=01;31:*.csh=01;32:*.exe=01;32:*.deb=01;31:*.dl=01;35:*.fli=01;35:*.gif=01;35:*.gl=01;35:*.gz=01;31:*.jar=01;31:*.jpeg=01;35:*.jpg=01;35:*.lzh=01;31:*.mov=01;35:*.mp3=01;35:*.mpeg=01;35:*.mpg=01;35:*.ogg=01;35:*.pbm=01;35:*.pgm=01;35:*.png=01;35:*.ppm=01;35:*.rpm=01;31:*.sh=01;32:*.tar=01;31:*.taz=01;31:*.tga=01;35:*.tgz=01;31:*.tif=01;35:*.tiff=01;35:*.tz=01;31:*.wav=01;35:*.xbm=01;35:*.xcf=01;35:*.xpm=01;35:*.xwd=01;35:*.z=01;31:*.zip=01;31:bd=40;33;01:cd=40;33;01:di=01;34:do=01;35:ex=01;32:fi=00:ln=01;36:mi=01;05;37;41:no=00:or=40;31;01:pi=40;33:so=01;35:'
export LESS="-ReXM"
#export LANG=C  # Since RedHat likes en-US
export LC_ALL=      # Unset LC_ALL
export LC_COLLATE=C # Okay, so en-US.UTF8 is okay, but I prefer ASCII ordering

## Someone decided $VISUAL should be `joe' on boardwalk:
#if [[ "${DISTRO}" == "redhat" && "$(hostname -s)x" == "boardwalkx" ]] ; then
    #export -n VISUAL
#fi
export VISUAL=vi
export EDITOR=vi
export CDPATH=.:~:~/FSF_2.5/eDir/Linux  # for my current project
export HISTTIMEFORMAT='%F %T '          # add timestamp to history

# Necessary for Gentoo?
#PATH="/bin:/usr/bin:/usr/local/bin:/usr/bin/X11:/usr/games"

# use ccache 
[[ -e /usr/lib64/ccache/bin ]] && export PATH=/usr/lib64/ccache/bin:$PATH
[[ -e /usr/lib/ccache/bin ]] && export PATH=/usr/lib/ccache/bin:$PATH

# Sun's JDK
[[ -e /usr/java/default/bin ]] && export PATH=/usr/java/default/bin:$PATH

# for Macintosh
if [[ "${DISTRO}" == "macosx" ]] ; then
    # add X
    [[ -e /usr/X11R6/bin ]] && export PATH=$PATH:/usr/X11R6/bin
    # add MacPorts' /opt
    [[ -e /opt/local ]] && export PATH=/opt/local/bin:/opt/local/sbin:$PATH
    # add Fink's /sw
    [[ -e /sw ]] && export PATH=/sw/bin:/sw/sbin:$PATH
fi

# eRad's MedServ
if [[ ${ISMEDSRV} == "yes" ]] ; then
    export PATH=~/component/tools:~/component/utils/bin:$PATH
fi

# If the Novell Client for Linux (ncl) exists on this machine:
if [[ -d /opt/novell/ncl/bin ]] ; then
    export PATH=/opt/novell/ncl/bin:$PATH
fi

# This user's programs
[[ -e ~/bin ]] && export PATH=~/bin:$PATH

# Set a place to display if none is set
if [[ "${DISPLAY}x" == "x" ]] ; then
    export DISPLAY=:0.0
fi

# For SuSE's `build' program:
# sentry has the following mounted:
# /mnt/source-sle   The SLE source code DVD
# /mnt/source-sled  The SLED source code DVD
# /mnt/sled         The SLED install DVD
export BUILD_RPMS=/tmp/rpms:/tmp/rpm-devel:/mnt/sled:/mnt/sles
export BUILD_ROOT=/tmp/build64
export BUILD_ARCH=x86_64:i686:i586:i486:i386    # default anyway

# Fedora (and by association, the OLPC) apparently compile the socket
# directory to be non-default, and since it is not on the OLPC,
# manually set it here:
export SCREENDIR=${HOME}/.screen

# If this system has Enlightenment, set $WINDOWMANAGER to be that
if [[ -e /usr/bin/enlightenment_start ]] ; then
    export WINDOWMANAGER=/usr/bin/enlightenment_start
fi

# Red Hat de-stupified
unalias rm cp mv 2> /dev/null  

alias emerge='emerge -va'  # Gentoo's portage
alias port='port -v'       # MacPorts
alias grep='grep --color'
alias harden="gcc-config 2; source /etc/profile;"
alias lastcmd="history|tail -n1|sed -e's/ *[0-9]* *//' "
alias ll='ls $LS_OPTIONS -al'
alias ls='ls $LS_OPTIONS'
alias path='echo $PATH'
alias unharden="gcc-config 5; source /etc/profile;"
alias wipessh="sed -i '/jas.is-a-geek.com/d;/192.168.25.6/d' /home/jas/.ssh/known_hosts"
alias clear="echo Type 'clearr' to clear the screen"
alias clearr=/usr/bin/clear
alias randpass="curl -k https://intranet.eradimagemedical.com/pwdgen.cgi"
[[ netware != ${DISTRO} ]] && alias scp="rsync -Pave ssh"
[[ netware != ${DISTRO} ]] && alias cp="rsync -Pav"
alias hist="history"
alias sentry="TERM=linux ssh -tY jeckard@216.105.130.240 ssh -Y jas@68.143.17.111"
alias ssh="ssh -Y"
alias which="type -p"  # prefer bash's `type' to whichever `which' is
                       # on system

# Make sure this system's `vi' is vim
[[ "netware" != "${DISTRO}" ]] && VI_1ST_WORD=$(vi -h | head -1 | cut -d\  -f1)
if [[ 'xVIM' == "x${VI_1ST_WORD}" ]] ; then
    PATH_TO_VIM=$(type -P vim)
	alias vi="${PATH_TO_VIM} -u ~/.vimrc.jas"
	alias gvim=~/bin/gvim.sh
	alias vim="${PATH_TO_VIM} -u ~/.vimrc.jas"
	alias vimdiff="${PATH_TO_VIM} -u ~/.vimrc.jas -d"
	alias gvimdiff=~/bin/gvimdiff.sh
	alias view="${PATH_TO_VIM} -u ~/.vimrc.jas -R"
fi

# My favs for indent:
JASINDENT="--k-and-r-style --blank-lines-after-declarations --no-tabs \
           --break-before-boolean-operator --cuddle-do-while \
           --line-length75 --comment-line-length75 --no-space-after-casts \
           --swallow-optional-blank-lines --space-special-semicolon "
           #--comment-indentation2 --declaration-comment-column2 \
           #--else-endif-column2 --line-comments-indentation2"
JASINDENT_ORIG="$JASINDENT --continuation-indentation8 --case-indentation8 \
                --indent-level8 --tab-size8"
JASINDENT="$JASINDENT --continuation-indentation4 --case-indentation4 \
           --indent-level4 --tab-size4"
alias jasindent_orig="indent $JASINDENT_ORIG"
# Now in ~/bin (see below)
#alias jasindent="indent $JASINDENT"

## Cygwin's which apparently doesn't have all these bells and whistles
## and Mac's BSD which doesn't have long opts
#if [[ "${DISTRO}" != cygwin && "${DISTRO}" != macosx && "${DISTRO}" != debian ]] ; then
#    # Stolen from Red Hat:
#    alias which='alias | /usr/bin/which --tty-only --read-alias --show-dot --show-tilde'
#fi

# it turns out that Red Hat has a better LESSOPEN than Debian (at
# least now) --Jas
case ${DISTRO} in
    redhat)
        alias mm=less
        ;;
    debian)
        alias mm=zless
        ;;
    netware)
        alias mm=more
        ;;
    *)
        alias mm=zless
        ;;
esac

function proml {
    case $TERM in
        xterm*)
            TITLEBAR="\[\033]0;[\$(lastcmd)] (\$?) \w\007\]"
            ;;
        *)
            TITLEBAR=''
            ;;
    esac
    HOST_NAME='\h'
    [[ -e /etc/HOSTNAME ]] && HOST_NAME=$(</etc/HOSTNAME)
    PS1="${TITLEBAR}\[\033[40m\]\[\033[33m\]${HOST_NAME/.*}\[\033[1;33m\][\t]\[\033[1;34m\](\$?)\[\033[1;36m\]\w\[\033[31m\]\\$\\[\033[0m\] "
}

proml

## For medsrv machines.
#if [[ "${ISMEDSRV}" == "yes" ]] ; then
    ## Want medsrv environment, but don't want to change $HOME.
    #eval $( cat /home/medsrv/etc/setenv.sh | grep -v ^HOME= )
#
    ## Copy this file to medsrv user as well
    #if [[ "$(whoami)x" = "rootx" ]] ; then
        #rsync /root/.bash_profile.jas /home/medsrv
        #chown medsrv /home/medsrv/.bash_profile.jas
    #fi
#fi

# If I ever get keychain working again:
#/usr/bin/keychain ~/.ssh/id_dsa
# Redirect .ssh-agent's 'Agent PID' msg
#source ~/.keychain/$HOSTNAME-sh > /dev/null

# So I don't have to carry .vimrc.jas file around separate from this
# file, incorporate it here:
# NOTE:  tabstop and shiftwidth changed from 8 to 4
if [[ ! -e ~/.vimrc.jas ]] ; then
    cat <<EOFVIMRC > ~/.vimrc.jas
" Stuff that I like in vim  --Jas
" Created by .bashrc.jas JAS_ROX=${JAS_ROX}

" set number

set autoindent
set autowrite
set background=dark
set backspace=indent,eol,start
set backup
set cmdheight=2
set expandtab
"if has("foldenable")
    set foldenable
    set foldmethod=syntax
"endif
set history=100
set hlsearch
set ignorecase
set smartcase
set incsearch
set joinspaces
set modeline
set nocompatible
set pastetoggle=<F2>
set printoptions=paper:letter,duplex:off,formfeed:y  " <CTRL-L> for <FF>
set ruler
set shiftround
set shiftwidth=4
set showcmd
set showmatch
set tabstop=4
set textwidth=70
set viminfo='20,\"50
 
syntax on
filetype plugin on
filetype indent on

set formatoptions+=tn
set formatoptions-=l

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out

" Add tags file for headers in /usr/include .  This should be
" generated by .bashrc.jas .
set tags+=~/.vim/systags

" shortcuts I use:
" remap 'gf' to create the file under the cursor if it doesn't exist:
map gf :e <cfile><CR>
" Format current line using 'fmt':
map ff !!fmt<CR>
" Format the comments on the current line using 'fmt':
map ff/ !!fmt<CR>jI// <ESC>
map ff# !!fmt<CR>jI# <ESC>
" Join strings from line below: ,J for strings, ;J for comments
map ,J JxxX
map ;J Jwdw
" Format current xml line to be indented:
map xml !!XMLLINT_INDENT="    " xmllint --format -<CR>dd
" Condrey's lprintf() looks terrible after it has been jasindent'd:
map lp JffA "<ESC>jI           "<ESC>Jff

if has("autocmd") 
    if exists("+omnifunc")
        autocmd Filetype *
            \   if &omnifunc == "" |
            \           setlocal omnifunc=syntaxcomplete#Complete |
            \   endif
    endif
    " To use syntax highlighting with Wikipedia
    " (see http://en.wikipedia.org/wiki/Wikipedia:Text_editor_support#Vim )
    au BufRead,BufNewFile *.wiki setfiletype Wikipedia

    " When creating new files, base them on the following template
    " files:

    "au BufNewFile *.c so ~/.vim/templates/src.c
    "au BufNewFile *.cpp so ~/.vim/templates/src.c
    au BufNewFile *.c{,pp} so ~/.vim/templates/src.c
    "au BufNewFile *.h so ~/.vim/templates/src.h
    "au BufNewFile *.hpp so ~/.vim/templates/src.h
    au BufNewFile *.h{,pp} so ~/.vim/templates/src.h
    au BufNewFile *.[ch]{,pp} exe "%s/FILE/" . expand("%")
    au BufNewFile *.h{,pp} exe "%s/FILE_/" . tr( expand("%"), "a-z.", "A-Z_")
    au BufWritePre,FileWritePre *.[ch]{,pp} exe "normal ma"
    au BufWritePost,FileWritePost *.[ch]{,pp} exe "normal 'a"
endif

EOFVIMRC
fi

# Add a tags file for all headers in /usr/include .  This file is used
# by the vimrc created above.
# ctags exists?
#if [[ netware != ${DISTRO} ]] && which ctags > /dev/null 2>&1 ; then
if [[ netware != ${DISTRO} ]] && type ctags > /dev/null 2>&1 ; then
    if [[ ! -e ~/.vim ]] ; then
        mkdir ~/.vim
    fi
    if [[ ! -e ~/.vim/systags ]] ; then
        INCLUDEPATH="/usr/include"
        if [[ -e /usr/local/include ]] ; then
            INCLUDEPATH="${INCLUDEPATH} /usr/local/include"
        fi
        if [[ -e /var/opensuse/usr/include ]] ; then
            INCLUDEPATH="${INCLUDEPATH} /var/opensuse/usr/include"
        fi
        if [[ -e /opt/novell/include/xplat ]] ; then
            INCLUDEPATH="/opt/novell/include/xplat ${INCLUDEPATH}"
        fi
        if [[ -e /opt/novell/ndk/novell-cldap-devel-2007.04.17-1linux64/include ]]
        then
            INCLUDEPATH="/opt/novell/ndk/novell-cldap-devel-2007.04.17-1linux64/include ${INCLUDEPATH}"
        fi
        if [[ -e /opt/novell/ndk/cldap/include ]] ; then
            INCLUDEPATH="/opt/novell/ndk/cldap/include ${INCLUDEPATH}"
        fi
        if [[ -e /cygdrive/c/novell-nwsdkc-devel-2007.02.27-1netware_windows/clib/include ]] ; then
            INCLUDEPATH="${INCLUDEPATH} /cygdrive/c/novell-nwsdkc-devel-2007.02.27-1netware_windows/clib/include"
        fi
        if [[ -e /opt/cc/include ]] ; then
            INCLUDEPATH="/opt/cc/include ${INCLUDEPATH}"
        fi
        echo "creating ctags file for ${INCLUDEPATH} ." >&2  # to stderr
        ctags -R -f ~/.vim/systags ${INCLUDEPATH}
    fi
fi # ctags exists

# Setting up aliases only works at the commandline.  Create a file for
# gvim stuff:
if [[ ! -e ~/bin ]] ; then
    mkdir ~/bin
fi
if [[ ! -e ~/bin/gvim.sh ]] ; then
    cat <<EOFGVIM > ~/bin/gvim.sh
#!/bin/bash

# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

\$(type -p gvim) -u ~/.vimrc.jas '+colorscheme ron' '+set number' '+set columns=84' '+set lines=60' \$@
EOFGVIM
    chmod +x ~/bin/gvim.sh
fi
if [[ ! -e ~/bin/gvimdiff.sh ]] ; then
    cat <<EOFGVIMDIFF > ~/bin/gvimdiff.sh
#!/bin/bash

\$(type -p gvim) -u ~/.vimrc.jas '+colorscheme ron' '+set number' '+set columns=84' '+set lines=60' '+set columns=168' -d \$@
EOFGVIMDIFF
    chmod +x ~/bin/gvimdiff.sh
fi

# So I don't have to carry around ~/.vim/templates/ files 
if [[ ! -e ~/.vim/templates ]] ; then
    mkdir -p ~/.vim/templates
fi
if [[ ! -e ~/.vim/templates/src.c ]] ; then
    cat <<EOFCSRC > ~/.vim/templates/src.c
" Created by .bashrc.jas JAS_ROX=${JAS_ROX}
:insert
//  \$Id$  

/**
 * @file FILE
 * @author Jas Eckard <jeckard@condreycorp.com>
 *
 * @section LICENSE
 *
 * (Condrey license)
 * 
 * @section DESCRIPTION
 *
 * This file is ...
 */

.
EOFCSRC
fi
if [[ ! -e ~/.vim/templates/src.h ]] ; then
    cat <<EOFHSRC > ~/.vim/templates/src.h
" Created by .bashrc.jas JAS_ROX=${JAS_ROX}
:insert
//  \$Id$ 

/**
 * @file FILE
 * @author Jas Eckard <jeckard@condreycorp.com>
 *
 * @section LICENSE
 *
 * (Condrey license)
 * 
 * @section DESCRIPTION
 *
 * This file is ...
 */

#ifndef FILE_
#define FILE_

#endif  // FILE_
.
EOFHSRC
fi

# So I don't have to carry .gdbinit file around separate from this
# file, incorporate it here:
if [[ ! -e ~/.gdbinit ]] ; then
    cat <<EOFGDBINIT > ~/.gdbinit
# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

# Notice the space following:
set prompt \033[40m\033[1;33m(gdb)\033[0m\033[0m 

set print pretty

# only the current thread may run when the inferior is resumed
set scheduler-locking on

# STL debugging functions from
# http://staff.science.uva.nl/~afn/gdb_stl_utils
# packaged from a program found at
# http://staff.science.uva.nl/~gilad/stl/gdb_stl_utils

source ~/.gdb/gdb_stl_utils

# Print wchar_t-based strings using "wchar_print" (or "wc")
# from http://www.linux.com/feature/51836

source ~/.gdb/wchar.gdb
EOFGDBINIT
fi
# Also, suggest using stlfilt with gcc for smaller error messages

# So I don't have to carry ~/bin/jasindent file around separate from this
# file, incorporate it here:
if [[ ! -e ~/bin/jasindent ]] ; then
    (
    echo "#!/bin/bash"
    echo
    echo "# Created by .bashrc.jas JAS_ROX=${JAS_ROX}"
    echo
    echo "if ! type -p indent > /dev/null ; then"
    echo "    echo Indent is not installed"
    echo "    exit 1"
    echo "fi"
    echo "indent $JASINDENT" | sed 's/  */ /g' | fmt | sed 's/.*/& \\/'
    echo "\$@ 2> /dev/null"
    ) > ~/bin/jasindent
    chmod +x ~/bin/jasindent
fi

# So I don't have to carry /root/bin/mntmountall file around separate from this
# file, incorporate it here:
if [[ "root" == $(whoami) && ! -e ~/bin/mntmountall ]] ; then
    cat <<EOFMNTMOUNTALL > ~/bin/mntmountall
#!/bin/sh

# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

# Bind-mount all the virtual filesystems currently mounted onto /mnt ,
# then chroot into /mnt .
# Assumes these dirs exist.

mount --bind /dev /mnt/dev
mount --bind /proc /mnt/proc
mount --bind /sys /mnt/sys
mount --bind /dev/pts /mnt/dev/pts
chroot /mnt

EOFMNTMOUNTALL
    chmod +x ~/bin/mntmountall
fi

# So I don't have to carry /root/bin/build32 file around separate from this
# file, incorporate it here:
if [[ "root" == $(whoami) && ! -e ~/bin/build32 ]] ; then
    cat <<EOFBUILD32 > ~/bin/build32
#!/bin/bash

# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

linux32 build --root /tmp/build32 --arch i586 --rpms \
               /tmp/rpms:/mnt/sled32/ \$@
EOFBUILD32
    chmod +x ~/bin/build32
fi

# So I don't have to carry /root/bin/build32on64 file around separate from this
# file, incorporate it here:
if [[ "root" == $(whoami) && ! -e ~/bin/build32on64 ]] ; then
    cat <<EOFBUILD32ON64 > ~/bin/build32on64
#!/bin/bash

# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

if [[ "x" != "\$@x" ]] ; then
    names=\${@/.spec}
else
    read -p "Names of Packages: " names
fi
specs=
for i in \${names}
do
    echo \$i > baselibs.conf
    specs="\$specs \$i*.spec"
done
linux32 build --baselibs --rpms /tmp/rpms:/mnt/sled32/ \
              --root /tmp/build32 --arch i586 \${specs}
EOFBUILD32ON64
    chmod +x ~/bin/build32on64
fi

# So I don't have to carry ~/.screenrc file around separate from this
# file, incorporate it here:
if [[ ! -e ~/.screenrc ]] ; then
    cat <<EOFSCREENRC > ~/.screenrc
# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

# Have 10000 lines buffered to go back to via C-a esc
defscrollback 10000
# On the OLPC, the 'erase' key becomes 'NUL'.  This fixes:
bindkey -d "\000" stuff "\010" 
caption always
screen su -
screen
EOFSCREENRC
fi

# Next 2 sections not on NetWare
if [[ netware != ${DISTRO} ]] ; then

    ## I like the gfilt program; if it exists, create a symlink in ~/bin;
    ## otherwise, it means g++
    #pushd ~/bin > /dev/null 2> /dev/null
    #if [[ ! -e ~/bin/gfilt ]] ; then
        #DIR=~jas/src/floss/stlfilt/
        #if [[ -e ${DIR}/gfilt ]] ; then
            #ln -s ${DIR}/gfilt
            #ln -s ${DIR}/gSTLFilt.pl
        #elif [[ -e ~/jas/bin/gfilt ]] ; then
            #DIR=~/jas/bin/
            #ln -s ${DIR}/gfilt
            #ln -s ${DIR}/gSTLFilt.pl
        #else
            #if type -p g++; then
                #ln -s $(type -p g++) gfilt
            #fi
        #fi
    #fi
    #popd > /dev/null 2> /dev/null

    # Per-user ssh configuration
    if [[ ! -e ~/.ssh/config ]] ; then
        [[ ! -e ~/.ssh ]] && mkdir ~/.ssh
        cat <<EOFSSHCONFIG > ~/.ssh/config
# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

# Make ssh connections have a faster initial connect:
ControlMaster yes
EOFSSHCONFIG
        chmod 600 ~/.ssh/config
    fi

fi  # not NetWare

# So I don't have to carry ~/.Xdefaults file around separate from this
# file, incorporate it here (for rxvt{,-unicode}):
if [[ ! -e ~/.Xdefaults ]] ; then
    cat <<EOFXDEFAULTS > ~/.Xdefaults
# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

*customization: -color
Rxvt.geometry: 80x96
Rxvt.background: black
Rxvt.foreground: white
Rxvt.fading: 30
*XtDefaultBackground: black
*XtDefaultForeground: white
*background: black
*foreground: white
EOFXDEFAULTS
fi

# So I don't have to carry ~/.inputrc file around separate from this
# file, incorporate it here:
if [[ ! -e ~/.inputrc ]] ; then
    cat <<EOFINPUTRC > ~/.inputrc
# Created by .bashrc.jas JAS_ROX=${JAS_ROX}

# possible completions show immediately
set show-all-if-unmodified on
set show-all-if-ambiguous on

# type the beginnings of a command, then up arrow, and the history
# will be searched for that command
"\e[A": history-search-backward
"\e[B": history-search-forward

EOFINPUTRC
fi

# Sometimes backspace doesn't work:
stty sane 2> /dev/null
